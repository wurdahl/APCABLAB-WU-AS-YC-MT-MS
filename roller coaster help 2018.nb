(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    209354,       4013]
NotebookOptionsPosition[    204219,       3916]
NotebookOutlinePosition[    204562,       3931]
CellTagsIndexPosition[    204519,       3928]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Roller coaster design - help file\nCopyright APCaBLab Amusement Park\nHonor \
Code applies!\n\n ",
 StyleBox["Execute cells from top down to see the development of a track with \
a loop", "Subsection"]
}], "Section",
 CellChangeTimes->{{3.6556491032626257`*^9, 3.6556491227163353`*^9}, {
  3.655847870264328*^9, 3.6558478932987366`*^9}, {3.655897966404999*^9, 
  3.655898029003579*^9}, {3.6840549329632797`*^9, 3.6840549331127663`*^9}, {
  3.6840788949230633`*^9, 3.684078910175562*^9}, {3.721078074391906*^9, 
  3.7210780748839006`*^9}, {3.721147372330494*^9, 3.7211473730961957`*^9}, {
  3.748089448074995*^9, 
  3.7480894495449677`*^9}},ExpressionUUID->"60c90e1e-03af-4b7f-9361-\
62f0b4b59581"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", "9.8"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"length", "=", "300"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", 
    RowBox[{"y_", ",", "hi_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"2", "g", 
     RowBox[{"(", 
      RowBox[{"hi", "-", "y"}], ")"}]}]]}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "speed", " ", "at", " ", "anypoint", " ", "from", " ", "change", " ", 
     "in", " ", "height", " ", "of", " ", "track"}], ",", " ", 
    RowBox[{
    "y", " ", "can", " ", "be", " ", "from", " ", "a", " ", "function", " ", 
     RowBox[{"y", "[", "x", "]"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6556488408059034`*^9, 3.6556488489197617`*^9}, 
   3.6556491398200274`*^9, {3.655847288658038*^9, 3.6558472978595877`*^9}, {
   3.6566247746144133`*^9, 3.6566247954628725`*^9}, {3.684054955186391*^9, 
   3.684054962579862*^9}, {3.6840688192383504`*^9, 3.6840688427949023`*^9}, {
   3.72090841392388*^9, 3.7209084589526024`*^9}, {3.7210525624386888`*^9, 
   3.721052562606559*^9}, 3.721052838693568*^9, {3.72105832744598*^9, 
   3.7210583295462723`*^9}, 3.721078088981885*^9, 3.721747023444518*^9, {
   3.7217525347894135`*^9, 3.7217525364770694`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"94e00497-b362-4019-8d19-25f17fb9304f"],

Cell[CellGroupData[{

Cell["\<\

Sample track in parametric format (it could be y[x] at this point, but it \
will have to be parametric when we cut in the loop)\
\>", "Subsection",
 CellChangeTimes->{{3.6556491430263767`*^9, 3.6556491485255423`*^9}, {
  3.655847315139888*^9, 3.655847319129728*^9}, {3.7208924550507483`*^9, 
  3.7208924920677795`*^9}},ExpressionUUID->"41c66002-d8b9-40d7-b7ad-\
0cae65c7d500"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], ":=", "t"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "is", " ", "the", " ", "height", " ", 
    RowBox[{"function", " ", "--"}], " ", "change", " ", "it"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"25", "+", 
      RowBox[{"20", 
       RowBox[{"Cos", "[", 
        RowBox[{"Pi", " ", 
         RowBox[{"x", "/", "50"}]}], "]"}]}]}], ")"}], 
    RowBox[{"\[ExponentialE]", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "/", "100"}], ")"}]}]}], "+", 
   RowBox[{".000225", " ", 
    RowBox[{"x", "^", "2"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hi", "=", 
    RowBox[{"y", "[", 
     RowBox[{"x", "[", "0", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "to", " ", "make", " ", "the", " ", "y", " ", "vs", " ", "x", " ", "plot",
      " ", "shown", " ", "below"}], ",", " ", 
    RowBox[{
     RowBox[{"we", " ", "'"}], 
     RowBox[{"call", "'"}], " ", "the", " ", "y", " ", "function", " ", 
     "with", " ", 
     RowBox[{"y", "[", 
      RowBox[{"x", "[", "t", "]"}], "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", 
      RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "300"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6556488408059034`*^9, 3.6556488489197617`*^9}, 
   3.6556491398200274`*^9, {3.655847331096275*^9, 3.65584733837943*^9}, {
   3.6558972074437647`*^9, 3.6558972085549917`*^9}, {3.720908489843492*^9, 
   3.7209084995366077`*^9}, {3.7210525800637927`*^9, 3.721052634538616*^9}, {
   3.7210527019157896`*^9, 3.7210527266505947`*^9}, {3.7210528281121197`*^9, 
   3.721052835053088*^9}, {3.721080986489581*^9, 3.721080987005556*^9}, {
   3.7211257985743065`*^9, 3.7211258174168797`*^9}, {3.7211258502051783`*^9, 
   3.7211258858255997`*^9}, {3.7211260605923595`*^9, 3.721126066813243*^9}, {
   3.7211261935281887`*^9, 3.721126202260398*^9}, {3.721147519121662*^9, 
   3.7211475240460806`*^9}, {3.721746991553949*^9, 3.7217470085745077`*^9}, {
   3.7217529742885723`*^9, 3.7217529748823833`*^9}, {3.7217530907639875`*^9, 
   3.7217531172119555`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"adef4794-4c30-4fd5-8518-a6cfffa4f2fd"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
dfB/ZnkJCg==
      "]]},
    Annotation[#, "Charting`Private`Tag$3776#1"]& ]},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->600,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.655648854281602*^9, 3.655847382883122*^9, 3.6560048098773823`*^9, 
   3.6566244349840083`*^9, 3.6840550742707305`*^9, 3.684857862665867*^9, {
   3.7208924976119766`*^9, 3.7208925020685434`*^9}, 3.720908500316609*^9, {
   3.7210525655787325`*^9, 3.721052596057598*^9}, 3.721052635790843*^9, {
   3.721052704355999*^9, 3.7210527270465865`*^9}, 3.7210528493985643`*^9, 
   3.7210583741082025`*^9, 3.7210781836922827`*^9, 3.7210809876218033`*^9, {
   3.7211258555178537`*^9, 3.721125886605602*^9}, {3.7211260612724037`*^9, 
   3.7211260676892843`*^9}, {3.721126197788394*^9, 3.721126202716359*^9}, {
   3.721147507477509*^9, 3.721147524733534*^9}, 3.7214093884910817`*^9, 
   3.721737759536332*^9, {3.721747003925455*^9, 3.721747028695929*^9}, 
   3.721752565105152*^9, 3.7217529925442133`*^9, 3.7223446011315174`*^9, 
   3.7480935695758257`*^9, 3.7504745966721354`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"08d355f8-405d-45c1-8da7-e081fbc0113c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "graph", " ", "the", " ", "track", " ", "height", " ", "along", " ", 
    "with", " ", "speed", " ", "as", " ", "functions", " ", "of", " ", "x", 
    " ", "for", " ", "the", " ", "first", " ", "minimum"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tempLength", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempLength"}], "}"}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"v", "[", 
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"x", "[", "t", "]"}], "]"}], ",", "hi"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempLength"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x(m)\>\"", ",", "\"\<y(m) or v (m/s)\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Speed (red)\\n Height of track (black)\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "tempLength"}], "}"}], ",", "All"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.655648872942854*^9, 3.6556489260482483`*^9}, {
  3.655847371892313*^9, 3.6558473749334507`*^9}, {3.6558474090100346`*^9, 
  3.6558476312893605`*^9}, {3.655897223756445*^9, 3.655897238143217*^9}, {
  3.6566248189567633`*^9, 3.656624823287839*^9}, {3.6840549844466915`*^9, 
  3.684054997662175*^9}, {3.684055044320966*^9, 3.6840551122976294`*^9}, {
  3.7208925112215843`*^9, 3.7208925201224713`*^9}, {3.7210583918875313`*^9, 
  3.7210584191306863`*^9}, {3.721126314056543*^9, 3.7211263768233056`*^9}, {
  3.721127912815674*^9, 3.72112795203236*^9}, {3.7217525545951414`*^9, 
  3.721752555251338*^9}, {3.7480895193308525`*^9, 
  3.7480895335297995`*^9}},ExpressionUUID->"c3467d8d-a3c7-4255-84d0-\
f435e971fb81"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], FaceForm[Opacity[0.3]], 
      LineBox[CompressedData["
1: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
H2r9AcuezKqm9vv/nvVgxc1NmnzHxP8B+1Y2MQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$9223#1"]& ]}, {{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
      Opacity[0.3]], LineBox[CompressedData["
1:eJxd1nk8lc/7P3BryBJSkVSEkDU6yjl1XlnPOYhwzn1XKu9KCkWEosXWorRS
KkoLsoWQVi2SpLKHVFIKWUuIkr7T79Nfv/OPx/Nxz4yZuWaua9TX+bl4iggJ
CWUICwn9/fv//yo6TfU+eSWz3d5v5clmtrL/51z21iXfBblnOthn+tJmdR+5
yT7R0L3oWH/Pv+8P2ObdDl+n3fnK3rPN41zfxcdsPc3ngrDbA//aP2XLecTI
RsYM/mtfxVbnqzc0PvnBHphfTPln1rCFb1XKfFsy+q9/HftzsNeLDyk///Vv
ZDs37LZQt/z9r/97tvyJ6sRVo0LIjvNhmOS2svXj1D4ERQvjf+N9YGsHRZiO
SYvgf+O1sb2rSo6FKYjif+N1sE+1TPiTOiaG/43Xz9b8ZMXbESQJydKS1BMm
X9kanycMVL2T/Df+V/ayz/qMdmupf+N/Yw/qeUfHTJr4b/zv7J3t7rvlz0j/
G/8HO8P2tnnLHrl/4/9h7+RbrivpVMB1vWM1Sl//sHPZT32vKCnCgRF0T4Ml
BEOa3WADRZjtqF7vWioE1rdG31enFSE2tj+/sF4YQqYNO3hLJ+Oy6KBTyJAo
rE92WhfEKqFVsfLQGEMSTePqMw6LTcM15aXhoqvlsSmh/l1Hoio0zjmbX3VS
RpzGufljN9TxqnDvM2PZ2fh8it03cbEWinO6sqfaaaIydeMe8TodaKwUNXm2
UAejiQwXwa95yErI9Rbbq48ECe/PcuZGmHWfH5ZKG2P8ycFk3nQTzI3JVMh1
nI/vnBuzdnvPh6XaM5HfvmZoEg37xXhoCtVDS6xNNjHg6vzxT9wXM+yseGPo
s2IhQj/3ShwbWYAvdZbbv2y3QMzexaN8CXMoFwlNXObLQl7wKT2hPnOs+O/g
z+EjS2DzPdakt2ohJn1Vrah1AaTawirsTy1Cteos9nmHpdgRE7wo2dwCqvoH
PsSsssRnOeZMzWoLyIVe99i91hLVVv4RRrUWECp/895/vSUOBwTFLaq3QPt6
4xbKxxJld9il3CYL5CW+btYKs8R7X6lVK1stYCutX//onCUe6fv7sb5awL+r
umz0tSWWaxaVi01i4kn69OzNtBXWJktYZHGY4B36WXDd3QrjM9bnHeAxUenT
fHfUwwpTbC9fWufARJPhuecxm60g0rF8aLIzEz2FKt0ZoVboWqTnuYFiQvGR
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

       "]]},
     Annotation[#, "Charting`Private`Tag$9246#1"]& ]}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x(m)\"", TraditionalForm], 
    FormBox["\"y(m) or v (m/s)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"Speed (red)\\n Height of track (black)\"", TraditionalForm],
  PlotRange->{{0, 100}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.655847385595056*^9, 3.655847418104906*^9, {3.655847465431576*^9, 
   3.655847499239399*^9}, 3.6558475328062763`*^9, {3.655847571584897*^9, 
   3.6558476322580247`*^9}, 3.656624437526037*^9, 3.656624824366312*^9, {
   3.6840550579146852`*^9, 3.684055075777599*^9}, 3.684857864949152*^9, 
   3.7208925206784716`*^9, 3.721058340492276*^9, {3.721058378292984*^9, 
   3.72105840010433*^9}, 3.721078186760642*^9, 3.721080994506585*^9, {
   3.721126296223745*^9, 3.7211263199485903`*^9}, {3.721126358994466*^9, 
   3.72112637742351*^9}, 3.7211279536605043`*^9, 3.721147530623234*^9, 
   3.721409394002013*^9, 3.721737765726754*^9, 3.7217470354762716`*^9, 
   3.721752567871108*^9, 3.7223446088402133`*^9, 
   3.74809357235557*^9},ExpressionUUID->"9b900f0e-b363-4be5-ad58-\
817e37782c8c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the first local minimum", "Section",
 CellChangeTimes->{{3.7211287196571417`*^9, 
  3.7211287277620316`*^9}},ExpressionUUID->"0bd18b4f-4a2f-4dd1-92cc-\
b343be877316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{
     "50", " ", "is", " ", "a", " ", "guess", " ", "based", " ", "on", " ", 
      "the", " ", "above", " ", "graph"}]}], ",", " ", 
    RowBox[{
    "you", " ", "may", " ", "have", " ", "to", " ", "change", " ", "it"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"guess", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cutX", "=", 
      RowBox[{"x", "/.", 
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}], "\[Equal]", 
          "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "guess"}], "}"}]}], "]"}]}]}], ",", 
     RowBox[{"cutY", "=", 
      RowBox[{"y", "[", "cutX", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7211287353470373`*^9, 3.7211287381157784`*^9}, {
  3.721737782658906*^9, 3.721737790230384*^9}, {3.721753070072051*^9, 
  3.7217530763707976`*^9}, {3.7480937862656193`*^9, 
  3.748093796319054*^9}},ExpressionUUID->"402de252-bbca-48db-9884-\
3af21783c89a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"50.16128465217162`", ",", "3.594522656603693`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7211287427163067`*^9, 3.7211475925084705`*^9, 3.721409397298297*^9, {
   3.7217377691788063`*^9, 3.7217377907927876`*^9}, 3.721747040695619*^9, 
   3.7223446111220617`*^9, 3.7480935811032333`*^9, 
   3.7480937987661724`*^9},ExpressionUUID->"7a6164ca-64c4-4998-8c20-\
984881219679"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"we", " ", "now", " ", "have", " ", "the", " ", "x"}], ",", 
   RowBox[{
   "y", " ", "point", " ", "at", " ", "which", " ", "our", " ", "track", " ", 
    "will", " ", "be", " ", "cut", " ", "and", " ", "the", " ", "loop", " ", 
    "inserted"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.748093596640033*^9, 
  3.7480936207724113`*^9}},ExpressionUUID->"8c280d64-adf7-4922-b718-\
44c7528efd02"],

Cell[CellGroupData[{

Cell["\<\
find slope of track dy/dx on the downhill portion before the first minimum\
\>", "Subsection",
 CellChangeTimes->{{3.6560055635464106`*^9, 3.6560055877662053`*^9}, {
  3.7211286605483527`*^9, 3.7211286679497347`*^9}, {3.7211287506612573`*^9, 
  3.721128754390113*^9}},ExpressionUUID->"93af2815-a5ee-496a-a50d-\
372b2c54618e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"slope", "[", "tee_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"180", "/", "Pi"}], ")"}], " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "/.", 
       RowBox[{"t", "\[Rule]", "tee"}]}], "]"}]}], "//", "N"}]}]}]], "Input",
 CellChangeTimes->{{3.656005233484276*^9, 3.6560053230292344`*^9}, 
   3.656005559905821*^9, {3.7209097624553585`*^9, 3.720909779253534*^9}, {
   3.720909819710167*^9, 3.7209098258584895`*^9}, {3.7211285432478247`*^9, 
   3.7211285437038364`*^9}, {3.7211286833399315`*^9, 3.7211286922731805`*^9}, 
   3.721128748345116*^9, 
   3.721147650587507*^9},ExpressionUUID->"f8c3ee4f-0b94-4164-ab02-\
759b44f5ca98"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxSlope", "=", 
   RowBox[{
    RowBox[{"First", "@", 
     RowBox[{"FindMinimum", "[", 
      RowBox[{
       RowBox[{"slope", "[", "tee", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"tee", ",", "10"}], "}"}]}], "]"}]}], "//", "Quiet"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "maxSlope", "]"}], ">", "45"}], ",", 
   RowBox[{"\"\<Max down slope = \>\"", "<>", 
    RowBox[{"ToString", "[", "maxSlope", "]"}], "<>", 
    "\"\<\[Degree] is too steep! Have to fix that. \>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"slope", "[", "tee", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"tee", ",", "0", ",", "minX"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "90"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<slope, degrees\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656005266007625*^9, 3.656005269512128*^9}, {
   3.656005303726466*^9, 3.656005305550768*^9}, {3.656005360159007*^9, 
   3.6560054248908634`*^9}, {3.6560054633593445`*^9, 3.656005463711588*^9}, {
   3.656005600968608*^9, 3.6560056012237835`*^9}, {3.656005693366496*^9, 
   3.6560057229961033`*^9}, {3.720909785578477*^9, 3.720909786586316*^9}, {
   3.7209098361433926`*^9, 3.720909870371065*^9}, {3.72108226327415*^9, 
   3.7210822859244165`*^9}, {3.721128443931662*^9, 3.721128611313687*^9}, {
   3.7211287722046423`*^9, 3.721128792323375*^9}, {3.7211288470553007`*^9, 
   3.7211289917666264`*^9}, {3.7211290703374825`*^9, 
   3.7211290704976053`*^9}, {3.7211476644949245`*^9, 3.7211476958751254`*^9}, 
   3.721147737180459*^9, 3.721147781617756*^9, {3.721409427218505*^9, 
   3.7214094512463737`*^9}, {3.721752907838616*^9, 3.7217529573619785`*^9}, {
   3.7480895804689655`*^9, 
   3.748089586300794*^9}},ExpressionUUID->"a56a5db1-0aa0-4284-8237-\
4f5adba1cc50"],

Cell[BoxData["\<\"Max down slope = -50.7877\[Degree] is too steep! Have to \
fix that. \"\>"], "Output",
 CellChangeTimes->{
  3.656005270349707*^9, {3.6560053067025843`*^9, 3.65600532584721*^9}, {
   3.656005361539982*^9, 3.6560054259245987`*^9}, 3.6560054649104605`*^9, 
   3.656005602476674*^9, 3.720909789774741*^9, {3.7209098513491397`*^9, 
   3.720909873635462*^9}, {3.7210822548893557`*^9, 3.721082288456522*^9}, 
   3.721128420171815*^9, 3.7211284526491632`*^9, {3.721128534574551*^9, 
   3.7211285467843337`*^9}, {3.721128585417936*^9, 3.7211286130378847`*^9}, 
   3.7211287940236835`*^9, {3.721128907179311*^9, 3.7211289873938265`*^9}, 
   3.7211290710737467`*^9, 3.7211476550252943`*^9, 3.7211476966877317`*^9, 
   3.721147739290286*^9, 3.7211477826065645`*^9, 3.7214094030820675`*^9, 
   3.7214094554898043`*^9, 3.7217377988354554`*^9, 3.7217470453866267`*^9, {
   3.72175291815627*^9, 3.7217529580182285`*^9}, 3.7223446153688936`*^9, {
   3.7480938054110866`*^9, 
   3.74809381133901*^9}},ExpressionUUID->"56899b4c-4dfc-42c4-bd75-\
0157cd982159"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1nk4VV0XAHBToaLMZaiMIcO991z3SsVShnOEItEXUqaiDEkZI0IyvlRC
KUqSUiGicDchVGZKMjQrkVkp+XZ/nef3POecvffae6215Z19rN14uLi4hLm5
uP49xQrDSms0ivQ1HaaRhZ4uUn3iXOEQmWxwcLVWlhapizQ/2S9dHXnNwCf1
e8UyW11EC359dybivoH/zU8lD4/poqI6ydMfIzgGqzqHr7fm66LJr6Vf+yJa
DaqFjhjIS25CqaHRV19FDBrMRuidZ4xuQu+NRwO7I34YvJcNkVmZuBm1qQlu
PuvJBb65W124O/RRUftH6ScuApAXVOz9oRGQi7HwHj/pVeCotX+fxaIhYh7N
y+62E4d5tuPHVxu3o6bg+tEm89WQ0PLwyTslI5TbOVSdkCYLolX1Y1ZixihR
uptQdl8P3/5zfWE5ZIzUDRZiXzgowIzG/b91Z03Qt1jF9X2nlOCy9A3RfGVT
lGAipFscrAKH6x6hjFxTFCLQ8iTGSxWCR3yPOawk0Wq+TwW/T6hC9DJFIX4R
Ej1c/J3hG6YK7oOzJx+Ikuj7rFrgvmRVUNsbULYoQaL9n6KZWkWqoK/+cyxZ
lkRQu7Wwe1oVZB5KpwWokYgvtPCqUqgaKF1oprtvI1Hij4SI2jh1+B7UF9Pp
S6KfP/NS81LV4b9+pRZZPxK58tTciMtUh90mjXJux0m0RWKm3rpAHexdZV9N
nsDj6zku+9CkDor2I+U8ISQyi9E8zyu4EbR/bvCdjiIRv1xLrtHZjXBv11MH
+XQSRZitbGw4owGtCwEq956QKNKcftImQQO4V/tMtFdiW+5Wen9BA5R7ygum
q7CtL51euKkBlmK2X1mIRFH71m1iNmqAxHPVq/fqSBTjqV2Qs0ITIl8ulz/y
kkQJcTsTQi9qwsHwSTvpAeyEY3rLrmrC9yYub9lBvN6k88OX8jShKishWG6I
REmpr4xKHmkCV414oOx7EiVnOi187dWETdw3lgt/JlFqgY+33VotkDgw2cQZ
JVF6c/Iuxi0tUG6c2eb0h0QFqgenL93XgrPlgae3LJDoSQwjfeGRFjhnMepX
/yXRwLbuwcZGLeh0WOvWskgipSfSPk7ftCD7XAqfFi+Fiu7cTEzQ1IYlVxg/
qgUp1JzwpPlziTYsXMrvUpWk0NtvCd7mldrwagm3wxfsUXK/aHGdNvTc6BrP
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
6XY=
       "]]},
     Annotation[#, "Charting`Private`Tag$10513#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"slope, degrees\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 50.16128362847193}, {-90, 90}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656005270349707*^9, {3.6560053067025843`*^9, 3.65600532584721*^9}, {
   3.656005361539982*^9, 3.6560054259245987`*^9}, 3.6560054649104605`*^9, 
   3.656005602476674*^9, 3.720909789774741*^9, {3.7209098513491397`*^9, 
   3.720909873635462*^9}, {3.7210822548893557`*^9, 3.721082288456522*^9}, 
   3.721128420171815*^9, 3.7211284526491632`*^9, {3.721128534574551*^9, 
   3.7211285467843337`*^9}, {3.721128585417936*^9, 3.7211286130378847`*^9}, 
   3.7211287940236835`*^9, {3.721128907179311*^9, 3.7211289873938265`*^9}, 
   3.7211290710737467`*^9, 3.7211476550252943`*^9, 3.7211476966877317`*^9, 
   3.721147739290286*^9, 3.7211477826065645`*^9, 3.7214094030820675`*^9, 
   3.7214094554898043`*^9, 3.7217377988354554`*^9, 3.7217470453866267`*^9, {
   3.72175291815627*^9, 3.7217529580182285`*^9}, 3.7223446153688936`*^9, {
   3.7480938054110866`*^9, 
   3.7480938114070983`*^9}},ExpressionUUID->"82a1224f-dda1-4a18-b2e6-\
ea871f5e1283"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.721128800484586*^9, 
  3.7211288028410854`*^9}},ExpressionUUID->"c0f71f3a-338f-4622-ba73-\
45babb61831e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

inserting a cycloid loop at the base of the first hill
\
\>", "Subsection",
 CellChangeTimes->{{3.6556491702123027`*^9, 3.6556491896084414`*^9}, {
  3.684057015281005*^9, 
  3.6840570198345075`*^9}},ExpressionUUID->"8febcdd6-d471-497b-9dd2-\
20f6f1733241"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "first", " ", "define", " ", "the", " ", "cycloid", " ", "parametrically", 
    " ", "and", " ", "look", " ", "at", " ", "it"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"r", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cycloid", "[", "t_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"Sin", "[", 
          RowBox[{"b", " ", "t"}], "]"}]}], ")"}]}], ",", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"b", " ", "t"}], "]"}]}], ")"}]}]}], "}"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"returns", " ", "a", " ", "vector", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y"}], "}"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"cycloid", "[", "t", "]"}], "/.", 
       RowBox[{"r", "\[Rule]", "9"}]}], "/.", 
      RowBox[{"b", "\[Rule]", "5"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6556489811690984`*^9, 3.655648987143506*^9}, {
   3.6556492643955173`*^9, 3.655649298876025*^9}, {3.6558476832374*^9, 
   3.6558477755450974`*^9}, {3.655847807400771*^9, 3.655847817818215*^9}, 
   3.6558972913032923`*^9, {3.720892570812636*^9, 3.720892575397318*^9}, {
   3.7210584564275246`*^9, 3.7210584840186896`*^9}, {3.7210586399090405`*^9, 
   3.721058770372147*^9}, {3.7210781499638147`*^9, 3.7210781724023886`*^9}, {
   3.7210782032700615`*^9, 3.7210783297610216`*^9}, {3.7211264337820015`*^9, 
   3.721126462816614*^9}, {3.7211265005967875`*^9, 3.7211265316931486`*^9}, {
   3.7211265700735493`*^9, 3.721126783535617*^9}, {3.7211271962818727`*^9, 
   3.7211272418507533`*^9}, 3.721147839988588*^9, {3.7211479064469156`*^9, 
   3.7211479207436647`*^9}, {3.7211479559293423`*^9, 3.721148014473293*^9}, {
   3.721409521698063*^9, 3.7214095268426557`*^9}, {3.748089592981614*^9, 
   3.748089675336377*^9}, {3.7480897153859878`*^9, 
   3.7480897186021585`*^9}},ExpressionUUID->"9089c0fa-9003-4ea3-a847-\
d78f690a1a37"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
UElJpVSKhERlaPgda/3e/z7r3veue/d+9j77WeusYyUw22m7KY5kRMQ2XKIQ
zfb6Zkzmj9WlczWzrlHYHaZxZ9YGUxhXO9scvknhxfeGb6l2plAKdhMZu0ch
avnM+aEGphBwtc3wekHB1jv1yp8hExyeE9UtN0yh3+Fjo9dnEzhPeWJh9ofC
6ZNyL950k3ksZVvOikkKEy3TDJMbTZBfd+zImpk0TmTKHOnMM0FPhI5ZDfGB
xs0zLFcGmkB6hlftvsU0umOXHC8g81rXqqWbKUsa6sfijip4moA/9dj6dlsa
ita6wnVrTOBw2XH9rDU0ZpyoDf5Gm+DJkTN597fSWCTU066lbYLY47ZnxnbQ
EBu/mOSiZILihgUJLB/i8/qGD94TMYH3U63BfQE0Rr4+/Kv0mYf8FlvKnPhC
LY9BL8MuHrLe2O6bG0EjwKKuhdfCw+es7uv1UTR490tHFjzjQeD6yQcqCTRc
HDN3z07lobVu9L1IKg3Oau7Qz0QePtzf2eFxg0ava6ZYSywP86wOXrh1i8bJ
FVH+8Yd54EkGaEzPodE3Zb3s2/U8fDxfIiX0mEbCM93HV1fycCHZYW1PEQ27
x9JXtlrxsM5/qVp2KY0wa8fALmMeJFbfcJV6RuOveXTuXVEeCkN0K3XqaUSF
yydsEuRhkp0jeOoVjdmJFzZOH+ci0kYtp/k1jSAvs8EV/Vy8mLzNsXxLQ6SX
u7m4gouJ8j83tnXRuG9C5a55xEU8/bfZuodGaKF9ZF8uFyr8zk5yvTRabHZx
Ba9w4aRz2Dj6E409Kob0mQQu9gVpR1KfadwJvTJTIZILAxa/RvkAjeJ6bob2
AS7KVtlIFnyjcfjG4kt3fLnIHj2wVeE7jbKQRyWGnlwkxXh+8R2icW1W30+D
1Vxw3IyS+n7SsJWON8i04UI75/7jWSMk3jHpXzXBxWqtxcJKozRs5kk5yutz
8S3/A0v2N417qmNf2cTf7Pn5c/E3wmopgmEr5Ll45Kp07MEfGtGtDobb53KR
L2c84veXxsGYyV8hM7n47/Cci/PHaNRW6Q2f4+NCRinbu5CwWdtf4zujHPDV
yexeTny8kkFMZdlXDnIu+6bU/zsvhSNU0fyBg8HmT+OWE8T3r41jD7RxsFDk
VVgW4dmlNoZ8jRx0zYlcOGOSxsot68vEqzj4PBIx/995LTcreyc1yjgYlXDW
+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

      "]]},
    Annotation[#, "Charting`Private`Tag$3671#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-6.353173833936669, 28.972622094195778`}, {0., 18.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7480896555977116`*^9, 3.7480896633801966`*^9}, 
   3.748089719086806*^9},ExpressionUUID->"0a660861-27fb-41e1-bb22-\
98540ca7da73"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "the", " ", "part", " ", "of", " ", "the", " ", "loop", " ", "we", " ", 
     "want", " ", "starts", " ", "at", " ", "the", " ", "first", " ", "min", 
     " ", "and", " ", "ends", " ", "at", " ", "the", " ", "next", " ", 
     RowBox[{"min", ".", "  ", "From"}], " ", "solving", " ", 
     RowBox[{"dy", "/", "dx"}]}], "=", 
    RowBox[{
    "0", " ", "for", " ", "t", " ", "for", " ", "the", " ", "cycloid"}]}], 
   ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "we", " ", "can", " ", "see", " ", "that", " ", "this", " ", "runs", " ",
       "from", " ", "\[IndentingNewLine]", " ", "t"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Pi", "/", "b"}], " ", "to", "  ", "t"}], " ", "=", " ", 
      RowBox[{"3", 
       RowBox[{"Pi", "/", "b"}]}]}]}], ";", " ", 
    RowBox[{
    "if", " ", "we", " ", "wanted", " ", "a", " ", "double", " ", "loop"}]}], 
   ",", " ", 
   RowBox[{
    RowBox[{"we", "'"}], "d", " ", "continue", " ", "to", " ", "5", 
    RowBox[{"Pi", "/", 
     RowBox[{"b", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6556489811690984`*^9, 3.655648987143506*^9}, {
   3.6556492643955173`*^9, 3.655649298876025*^9}, {3.6558476832374*^9, 
   3.6558477755450974`*^9}, {3.655847807400771*^9, 3.655847817818215*^9}, 
   3.6558972913032923`*^9, {3.720892570812636*^9, 3.720892575397318*^9}, {
   3.7210584564275246`*^9, 3.7210584840186896`*^9}, {3.7210586399090405`*^9, 
   3.721058770372147*^9}, {3.7210781499638147`*^9, 3.7210781724023886`*^9}, {
   3.7210782032700615`*^9, 3.7210783297610216`*^9}, {3.7211264337820015`*^9, 
   3.721126462816614*^9}, {3.7211265005967875`*^9, 3.7211265316931486`*^9}, {
   3.7211265700735493`*^9, 3.721126783535617*^9}, {3.7211271962818727`*^9, 
   3.7211272418507533`*^9}, 3.721147839988588*^9, {3.7211479064469156`*^9, 
   3.7211479207436647`*^9}, {3.7211479559293423`*^9, 3.721148014473293*^9}, {
   3.721409521698063*^9, 3.7214095268426557`*^9}, {3.748089592981614*^9, 
   3.7480896494694805`*^9}, {3.7480897307023325`*^9, 
   3.7480897352524204`*^9}},ExpressionUUID->"dc195e80-85b0-4066-81d5-\
622d106b68ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dee", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"cycloid", "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"dydx", "=", 
  RowBox[{
   RowBox[{"dee", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "/", 
   RowBox[{"dee", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7480897412203903`*^9, 
  3.7480897886920037`*^9}},ExpressionUUID->"bb1c3b8f-86f8-43e2-9204-\
9a21b12118ab"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"b", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"b", " ", "t"}], "]"}]}], 
   RowBox[{"1", "-", 
    RowBox[{"b", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"b", " ", "t"}], "]"}]}]}]]}]], "Output",
 CellChangeTimes->{{3.748089769197787*^9, 
  3.748089790153798*^9}},ExpressionUUID->"b5899130-6136-4705-af34-\
7fa5598126a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "find", " ", "the", " ", "horizontal", " ", "tangent", " ", "values", " ", 
    "of", " ", "t"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dee", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", "t"}], 
     "]"}]}], "/.", 
   RowBox[{
    RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748089797579735*^9, 3.7480898466450977`*^9}, {
  3.748089878607423*^9, 
  3.7480899154243126`*^9}},ExpressionUUID->"85771021-db4c-4785-b8f8-\
3f5f9867e526"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "b"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Pi]", "b"], ",", 
     FractionBox[
      RowBox[{"3", " ", "\[Pi]"}], "b"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7480898118948565`*^9, 3.748089847229873*^9}, {
  3.748089879396468*^9, 
  3.7480898899985323`*^9}},ExpressionUUID->"f8853376-3229-4acb-995f-\
798c3f9a62ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Note", ":", " ", 
     RowBox[{
     "all", " ", "these", " ", "t", " ", "values", " ", "give", " ", 
      "horizontal", " ", "tangents"}]}], ",", 
    RowBox[{
    "but", " ", "we", " ", "want", " ", "the", " ", "latter", " ", "2", " ", 
     "because", " ", 
     RowBox[{"we", "'"}], "re", " ", "inserting", " ", "the", " ", "loop", 
     " ", "at", " ", "a", " ", "local", " ", "minimum"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "=", "9"}], ";", 
    RowBox[{"b", "=", "5"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"sample", " ", "values"}], ",", " ", 
     RowBox[{
     "which", " ", "you", " ", "will", " ", "want", " ", "to", " ", 
      "change"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "entry", " ", "and", " ", "exit", " ", "points", " ", "on", " ", "the", 
     " ", "loop"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startLoop", "=", 
     RowBox[{"Pi", "/", "b"}]}], ";", 
    RowBox[{"endLoop", "=", 
     RowBox[{"3", 
      RowBox[{"Pi", "/", "b"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "difference", " ", "in", " ", "the", " ", "first", " ", 
      "components", " ", "of", " ", "cycloid", " ", "at", " ", "each", " ", 
      "point"}], " ", "=", " ", 
     RowBox[{
     "the", " ", "horizontal", " ", "distance", " ", "required", " ", "for", 
      " ", "the", " ", "loop"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"loopWidth", "=", 
     RowBox[{"First", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cycloid", "[", "endLoop", "]"}], "-", 
        RowBox[{"cycloid", "[", "startLoop", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"loopCenterX", "=", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"cycloid", "[", "startLoop", "]"}]}], "+", 
      RowBox[{"loopWidth", "/", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Loop entry t = \>\"", ",", "startLoop", ",", 
     "\"\<  loop exit t = \>\"", ",", "endLoop"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<the loop is \>\"", ",", "loopWidth", ",", "\"\< across\>\""}], "]"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"show", " ", "it"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"cycloid", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{".95", "startLoop"}], ",", 
         RowBox[{"1.05", " ", "endLoop"}]}], " ", "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".015", "]"}], ",", "Blue", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"cycloid", "[", "startLoop", "]"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"cycloid", "[", "endLoop", "]"}], "]"}]}], "}"}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6556489811690984`*^9, 3.655648987143506*^9}, {
   3.6556492643955173`*^9, 3.655649298876025*^9}, {3.6558476832374*^9, 
   3.6558477755450974`*^9}, {3.655847807400771*^9, 3.655847817818215*^9}, 
   3.6558972913032923`*^9, {3.720892570812636*^9, 3.720892575397318*^9}, {
   3.7210584564275246`*^9, 3.7210584840186896`*^9}, {3.7210586399090405`*^9, 
   3.721058770372147*^9}, {3.7210781499638147`*^9, 3.7210781724023886`*^9}, {
   3.7210782032700615`*^9, 3.7210783297610216`*^9}, {3.7211264337820015`*^9, 
   3.721126462816614*^9}, {3.7211265005967875`*^9, 3.7211265316931486`*^9}, {
   3.7211265700735493`*^9, 3.721126783535617*^9}, {3.7211271962818727`*^9, 
   3.7211272418507533`*^9}, 3.721147839988588*^9, {3.7211479064469156`*^9, 
   3.7211479207436647`*^9}, {3.7211479559293423`*^9, 3.721148014473293*^9}, {
   3.721409521698063*^9, 3.7214095268426557`*^9}, {3.748089592981614*^9, 
   3.7480896494694805`*^9}, {3.7480897307023325`*^9, 3.748089738184366*^9}, {
   3.748089927476136*^9, 3.748089990964364*^9}, {3.748093533391458*^9, 
   3.7480935386947036`*^9}, {3.7480940294090414`*^9, 
   3.7480940441005106`*^9}, {3.7480948036143475`*^9, 
   3.7480948221031933`*^9}},ExpressionUUID->"2d45f960-68b7-4e2b-b9df-\
055a290968a9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loop entry t = \"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "5"], "\[InvisibleSpace]", "\<\"  loop exit t = \"\>",
    "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"3", " ", "\[Pi]"}], "5"]}],
  SequenceForm[
  "Loop entry t = ", Rational[1, 5] Pi, "  loop exit t = ", Rational[3, 5] Pi],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.721126634137478*^9, {3.7211267323532095`*^9, 3.721126783963586*^9}, 
   3.7211272102353687`*^9, {3.721147910009808*^9, 3.7211479216811547`*^9}, 
   3.7211479569919806`*^9, 3.7211480152515883`*^9, {3.7214095043728027`*^9, 
   3.7214095273738127`*^9}, 3.721737830679755*^9, 3.7217470498839083`*^9, 
   3.722344618207001*^9, 3.748090003777172*^9, 
   3.748094044905445*^9},ExpressionUUID->"3c6ff38e-83f1-4f54-913f-\
3571d6be6ad0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"the loop is \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"18", " ", "\[Pi]"}], "5"], 
   "\[InvisibleSpace]", "\<\" across\"\>"}],
  SequenceForm["the loop is ", Rational[18, 5] Pi, " across"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.721126634137478*^9, {3.7211267323532095`*^9, 3.721126783963586*^9}, 
   3.7211272102353687`*^9, {3.721147910009808*^9, 3.7211479216811547`*^9}, 
   3.7211479569919806`*^9, 3.7211480152515883`*^9, {3.7214095043728027`*^9, 
   3.7214095273738127`*^9}, 3.721737830679755*^9, 3.7217470498839083`*^9, 
   3.722344618207001*^9, 3.748090003777172*^9, 
   3.748094044909421*^9},ExpressionUUID->"70f0b3b1-d670-4618-af3c-\
0821300964cf"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJwV2nc41V8cB3AjpWTea2/u4hr3WiE6H2W0iJJKdpIVorJSKskuMzslI1ES
opItKiWjSCRJQnYkxe/8/vK8nvNd9/s953Pen+ch6+S9/zgbCwvLG3YWlv//
hilv8Kmo5AXXlqv7K22fIf70W4lS33hBm73c1TvjKbL9HHi+eSMfpNJ/dLf0
P0F2q7eqtbT5oDfa7bqFczUaK2PppSfzQamh57VPSZVof73LF89iPmidn7KK
+16BBoNkHR408oFMgb3ckF4F8v/Rmq89h6/HNI91nn6EYnQ1qo/u4wcGYmVb
9HuILDVvtBe48MPhAzN6Jf2lqEylWOFXCD+w9Oj85jAuRWcPE24nFvNDaVzV
Nh2j+4intXt+cKMA1E1N32pZvIuS81vzNGQFgMF5wd1qphB5P350KlpbADq8
fdvo0wVIJiMa9E7g8SfD/oV/85Cn0qJoUZMAyKgFhMxa3UadD46sbPgkANdF
U8Yrgm4hmw8jrS7zAjB076RMQ24OMh4I46fKESBnqrfxOFc2WgiQuxihQwAH
Jvtb1ZBM9FRruXncnAAy5MMHopfTUVm3Q9XDCwSok12L+c2figaDA6yFbhBg
6LyJJNf9FOT9/v2T4Pv4/F/5n0otk1FDre/NnQMECE04dO5xfQJiJLodGtcl
AktQrKa/ZgySTP+z23I/EeByhcKIUBSac/z65rkb9oYaWgh3BPpmWu+TnIqP
l7Uq0NQNQ7Hp2pdZS7HrjE2sfC6h8L9cvF4viBCa1a2W9zQUJT1rC965iMeL
37+7KR+M9pI1LSq5BYGFt3/HEZ0AtP7ZagSJjF26ut4v8Aza/sRFMlFPEEIF
I8d/fvVFettKONkssZeMH74M8EF39goYnfLAx5OJ8kQfT2TY2fN66BL2Owv3
IztcUWXelnTzdGzdf74uHs6IJdK/oO4htmePnd6YA9qeYV6g8ArbudzFb84a
BV+QH0kYwbbbEf+83xJt4M+0+vsPOzTjYZXIPlQi4rJ0XFgIWEQyqFmcxmjn
PuXatwzsiDWzozz6SNghK19nNzYtMamPxkQ+E475ucewry8E+9bLIMNIymPu
EOxQlaLxBxwo5VXKO/8UbJZM47EDTds2GthNfXnwv1v11YS/b7vuT1u/tw3b
gZHdlsqPqldz+CuHsX1khOWcKMjB3W+jzN//n0eRdEBUE2kf3DMaKSiM7996
K4jXAOke686ZV8FOYjm9LLML6Rs+YdruxLaezY53sEBZlYXxLY7YdnsP/lmy
Qlcj91SrBmOP3f1ZbmWLym+a3UpNwj7alWa/zQn9mLXdznof22jOikvTBbnH
k5PdXmC7cOyzueaO4oosEt4NYc8cY7Ew9UbUhAivHIIIhPYsn+T9cxplHZrc
tkFZBFj8NehBU/5oIdIl86QxdsARwUfEYPSvxeKLdiD258sXjVZC0ex6ySdZ
CSJQF+jSSei7hLbKP2JjKxYByPvzoeVtGErxWmxuHcT+Vgy9GyIR2WmNSf+N
zw/7q6y5KxoJ1EXNxPCLAoux44hfbiyaahk2MTMUBZlSzoe7LOJREZG7s8QW
j89ZbqnOTUCJ4mfiN/uLAhgGfr/BloQeXX+W8OIuPr4C9ed8S0EqPSvN8o34
+E3i0i/dUpFlmDb/hU+iMKRsEOvwJw09YpzsVOMVgzrm9epOyEL9b+nqcafF
wLzx0WY75m0UdujZkeFYMQBB393S5FzEb9tnq1mAx61uVBKl76BbgVe/fOgT
Awfr7zXp5Hx0TvvUJh4kDj7hctEbQ4rQxYq+i9obJWCm0iY5VrEMiYDK55cy
EnC49l5Q2MsyJFDN//GoNh6/2DmpdPIREt7x8XrgCQn4vT6sLP5JOWK50G+T
2ywBdZHsanlnHqNidfcd9y5KQqkq5XWTZw36eDq6nJQmCSCZUfl0y3OktK7J
ObNUEsYu6T114KhFUSFT7uGfJcGTzMJtbVmHBA96uxnqS0FqW3Lqsw0NKICi
ynXstxRM/giTunW/GTHpZ4preKXB0HJiKUShBWnvG1YRokrDdYf4mgd5Leim
/KvauoPSMCO2z5//9gskMUD3WimTBj2P36faitrQMs+62VAtGbjO7p89ttKO
HJrcdZKnZUANJff0t3ehj3XTUl/+yEDo0xfhHVLdqEbBIp++XhbS99R6u/h0
o7PkjmvPJGRB5ohC1BnBHiSS/O1i+y5ZsLz/dZvUiffIznct7G6uLPT+6li9
TOtDcoEyalus5CDpddrGcbnPaB0fh9h+Rzlw8X11sPvqZ3Te/62ph6ccBA2k
Rtn8/Ix4p8/EpV6SgyvzGyTkbYfQO9YXCoP35YDIb/WgRvkLihriDyBskIdP
ah6EuwPD6Cn3Cy5ipTwMOkdZ//AfRWQPF9LnenmwWGp6qlc9iiJcWnoL2uUh
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
o/dnzw==
       "]]},
     Annotation[#, "Charting`Private`Tag$12358#1"]& ]}, 
   {RGBColor[0, 0, 1], PointSize[0.015], 
    PointBox[NCache[{Rational[9, 5] Pi, 0}, {5.654866776461628, 0}]], 
    PointBox[NCache[{Rational[27, 5] Pi, 0}, {16.964600329384883`, 0}]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.9642132522764673`, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{3.9642132522764673`, 21.89874484351007}, {0., 
   17.999999321973053`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7210587710313997`*^9, {3.721078194881707*^9, 3.721078246960487*^9}, 
   3.721081003715897*^9, 3.7211264660408506`*^9, 3.7211265558356714`*^9, 
   3.7211266341775107`*^9, {3.7211267323892417`*^9, 3.721126783999613*^9}, 
   3.721127210275364*^9, {3.7211479100411963`*^9, 3.721147921712387*^9}, 
   3.7211479570232143`*^9, 3.721148015298498*^9, {3.7214095044040575`*^9, 
   3.7214095274050927`*^9}, 3.7217378307110076`*^9, 3.7217470499322367`*^9, 
   3.7223446182539115`*^9, 3.7480900038132257`*^9, 
   3.7480940449494705`*^9},ExpressionUUID->"d6a5b491-abb8-4542-a472-\
e8ef41a6a9dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Plot with the loop inserted into a cut in the original track
\
\>", "Subsection",
 CellChangeTimes->{{3.655649199497904*^9, 3.655649216444395*^9}, {
  3.655847787520627*^9, 
  3.655847794208387*^9}},ExpressionUUID->"101fea32-4163-4934-8794-\
c8b53d58efa4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "cutX"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cycloid", "[", "t", "]"}], "-", 
      RowBox[{"cycloid", "[", "startLoop", "]"}], "+", 
      RowBox[{"{", 
       RowBox[{"cutX", ",", "cutY"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "startLoop", ",", "endLoop"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", 
      RowBox[{"x", "-", "loopWidth"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"cutX", "+", "loopWidth"}], ",", "tempLength"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "adding", " ", "the", " ", "position", " ", "of", " ", "the", " ", "first",
     " ", "min", " ", 
    RowBox[{"{", 
     RowBox[{"minX", ",", "minY"}], "}"}], " ", "to", " ", "the", " ", 
    "cycloid", " ", "matches", " ", "these", " ", "parts", " ", "of", " ", 
    "the", " ", "track"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.655649008465472*^9, 3.6556490170978403`*^9}, {
   3.6556492339056635`*^9, 3.6556492551544323`*^9}, {3.6558478300737224`*^9, 
   3.6558478492924023`*^9}, {3.6558479360909033`*^9, 
   3.6558479404480333`*^9}, {3.655897341619864*^9, 3.6558974028701596`*^9}, {
   3.6840572248753743`*^9, 3.684057241900246*^9}, {3.6840690617345304`*^9, 
   3.6840690754768677`*^9}, 3.72107844102745*^9, {3.721080760948017*^9, 
   3.721080786115453*^9}, 3.721081736343503*^9, {3.7211279947973757`*^9, 
   3.721127997441783*^9}, 3.7214095817557125`*^9, {3.7480938397729845`*^9, 
   3.748093858373695*^9}},ExpressionUUID->"abbf0c6d-f83e-411f-ae96-\
1d234e766592"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
93Uqfb0ibYGoqvVyiUL/DzC7U+M=
        "]]},
      Annotation[#, "Charting`Private`Tag$12672#1"]& ]}, {}, {}}, {{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[
      Opacity[0.3]], LineBox[CompressedData["
1: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
Ypo9lzX48eE3+OHOhiEJ0GxsDxYc5GP9apu18gUSuJT40HhZFB8P0rnWv3Mk
gDxdle5oPpbGNjp+OyeBSpWEu2pxfGTvkm+aEyeB4OauptRkPsqrUqXld0hg
7/4Ei6R80l/ZzEebzCTQ9qHmgkURH+OzuYNuBhJohZ9TczEf70OPem7SkgB1
+J65/G0+mp3zZfLkJDB8KuHk+Qo+4la5jU//FkffWY+mG818hKq+Eht+IQ5O
W3nI6hY+1BquWf95LI7W9p/LfrfykTa/9sW8cnG4bikLtW/nQ2jlvn8xJeKQ
G8v61tzHx1bhH3Os0sVRcYt6JTDNR/fudc/eB4lj/ZUckXEBChGFC0v9d4jD
d/rwjgEhCidEXvnKbxXHzej+Jy2zKcSsLZx9dZ04PHJWx1+XpzDxiBbatEwc
tc8lDPIUKfRc/xwl6ygOf+eVwxnKFGqfPXL3WyIOfZeIiThNCkt5C3e4M8WR
/d32g68xaU/KztFWRxydZ+yve5lR8Bi/8JyuIY6q9XVX3CwpdIoWqlmoiENi
YKcAexGFxE9JyyPlxOF1/o21kTMF44LJzyozxfFy5XcFHRaF+H46/YEg6X9Z
jJQql4LgacGVgf9ooBaauUsup3BDJdV23m8arj5kGo2tpzDN+Ji9Z4gGRTmN
9m8bKXi6vhmp7KdB9EDk1T5vCqMJj+br9NHQ0nn6UJsvBdW5Kc70LuJfT0+0
7KAwOUPI9HUnDXIePtcaAyiYrPATONFOQ+SPr/rPgsl8xz97On6gYVKGF/Uo
jMLuKIcBu1Ya3qxUGLofTkG+e+HmFS00sF61/Sw+RGGfxkL5+000VNesTsg/
QmFelbur+GsaOn3MFl46RiG7wXFv2CsaXtYK3Th3gsJVwzWnTr6kIdhi36Hk
RAqujZsOL6qjoSGYvS4xicLn6CmvqRoa9N/dRFwKhRabaNPmahpSz/80PZpG
wdt2zVDlCxr0ZnD0D52nsFnlWXrVcxroTqP6+7MoLKpUtWp/RoN3lpl5aA6F
io15z8SJscwWuy5R0IvKclxZRd4Pdlvtf4XC4PSSm8VPyfq6VQZuK6BQ9fe+
tAZxrt6tBO9rFE6OW3tfeULDJYnAG54lFBxu9F50IhaFxTu3W+R7548tvx7T
wPtq/W/lXQrnVcymKolNrF7ou9wn4xsak8r+3/9Tucuv5JRT////V/8H3Xr/
VA==
       "]]},
     Annotation[#, "Charting`Private`Tag$12711#1"]& ]}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
GQH+B6a2LJ4=
        "]]},
      Annotation[#, "Charting`Private`Tag$12737#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.65564901875305*^9, 3.6558478548783703`*^9, {3.655847921925834*^9, 
   3.6558479415207834`*^9}, 3.6560048251452656`*^9, 3.6566244495078015`*^9, 
   3.6848578775624995`*^9, 3.7208926316486454`*^9, 3.7209090291871347`*^9, 
   3.7210588603452525`*^9, 3.7210807672607927`*^9, 3.7210810242540603`*^9, 
   3.721127854232428*^9, 3.72112799882193*^9, 3.7211480533112187`*^9, 
   3.7214095832869887`*^9, 3.7217378597111135`*^9, 3.721747059272874*^9, 
   3.7223446260450563`*^9, 
   3.7480941742450924`*^9},ExpressionUUID->"09840609-be1f-4769-b001-\
bbe1ba9a760f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Build the piecewise parametric functions for the track by scaling the \
argument of the cycloid function to run from t=Pi/b to t=3Pi/b as x covers \
loopwidth 
\
\>", "Subsection",
 CellChangeTimes->{{3.6556493166743746`*^9, 3.6556493277396035`*^9}, {
   3.6558479524435472`*^9, 3.6558479594325185`*^9}, {3.655897551086769*^9, 
   3.6558975592421665`*^9}, {3.655897599775238*^9, 3.6558976127363577`*^9}, {
   3.6558976964406505`*^9, 3.6558977437535424`*^9}, 3.655897907637503*^9, {
   3.7209087138128233`*^9, 3.7209087449200444`*^9}, {3.748095165894365*^9, 
   3.748095189297682*^9}},ExpressionUUID->"36e109fc-d4bc-40d6-8f9d-\
39f816468356"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "exx", " ", "is", " ", "the", " ", "x", " ", "coordinate", " ", "of", " ",
      "the", " ", "final", " ", 
     RowBox[{"track", ".", " ", "It"}], " ", "is", " ", "a", " ", "function", 
     " ", "of", " ", "t", " ", "because", " ", "it", " ", "includes", " ", 
     "the", " ", "parametric", " ", 
     RowBox[{"cycloid", ".", "  ", "\[IndentingNewLine]", "The"}], " ", 
     "track", " ", "is", " ", "defined", " ", "in", " ", "pieces", " ", 
     "using", " ", 
     RowBox[{"Mathematica", "'"}], "s", " ", "conditional", " ", 
     "definition"}], " ", "/;", " ", 
    RowBox[{
     RowBox[{"meaning", " ", "'"}], 
     RowBox[{"where", "'"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"exx", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/;", 
     RowBox[{"t", "<", "minX"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "portion", " ", "before", " ", "the", " ", "loop", " ", "starts"}], ",", 
     " ", 
     RowBox[{"where", " ", "x", " ", "is", " ", "just", " ", "t"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exx", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cycloid", "[", 
          RowBox[{
           FractionBox["Pi", "b"], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "b"], 
            FractionBox[
             RowBox[{"t", "-", "minX"}], "loopWidth"]}]}], "]"}], "-", 
         RowBox[{"cycloid", "[", "startLoop", "]"}]}], ")"}]}], "+", "minX"}],
      "/;", 
     RowBox[{"minX", "\[LessEqual]", " ", "t", "<", 
      RowBox[{"minX", "+", "loopWidth"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"this", " ", "part", " ", "is", " ", "the", " ", "loop", " ", 
       RowBox[{"itself", ":", " ", "\[IndentingNewLine]", 
        RowBox[{"when", " ", "t"}]}]}], "=", "minX"}], ",", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "start", " ", "the", " ", "loop", " ", "as", " ", "if", " ", 
       "t"}], "=", " ", 
      RowBox[{"Pi", "/", "b"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"when", " ", "t"}], "=", 
      RowBox[{"minX", "+", "loopWidth"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "we", " ", "are", " ", "leaving", " ", "the", " ", "loop", " ", "as", 
       " ", "if", " ", "t"}], "=", " ", 
      RowBox[{"3", 
       RowBox[{"Pi", "/", "b"}]}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exx", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "/;", 
     RowBox[{"t", "\[GreaterEqual]", " ", 
      RowBox[{"minX", "+", "loopWidth"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"after", " ", "the", " ", "loop", " ", "ends", " ", 
      RowBox[{"we", "'"}], "re", " ", "on", " ", "the", " ", "original", " ", 
      "track"}], ",", " ", 
     RowBox[{"shifted", " ", "by", " ", "loopWidth"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "wye", " ", "coordinate", " ", "is", " ", "a", " ", "function", " ", "of",
      " ", "position", " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"it", " ", "will", " ", "actually", " ", "be", " ", 
       RowBox[{"x", "[", "t", "]"}], " ", "when", " ", "used"}], ")"}]}], " ",
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wye", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/;", 
     RowBox[{"x", "\[LessEqual]", " ", "minX"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "original", " ", "y", " ", "function", " ", "prior", " ", 
     "to", " ", "the", " ", "loop"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wye", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Last", "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cycloid", "[", 
          RowBox[{
           FractionBox["Pi", "b"], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", "Pi"}], "b"], 
            FractionBox[
             RowBox[{"x", "-", "minX"}], "loopWidth"]}]}], "]"}], "-", 
         RowBox[{"cycloid", "[", "startLoop", "]"}]}], ")"}]}], "+", "minY"}],
      "/;", 
     RowBox[{"minX", "<", "x", "\[LessEqual]", " ", 
      RowBox[{"minX", "+", "loopWidth"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wye", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"y", "[", 
      RowBox[{"x", "-", "loopWidth"}], "]"}], "/;", 
     RowBox[{"x", ">", 
      RowBox[{"minX", "+", "loopWidth"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "original", " ", "y", " ", "function", " ", "after", " ", 
     "the", " ", "loop"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"plot", " ", "it"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"exx", "[", "t", "]"}], ",", 
       RowBox[{"wye", "[", 
        RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tempLength"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQPa1A+uEMm9eOWTdMn4Pov/2NzDOBNJPFAU4Q7fG9
gfUXkN6Rx80Gons2XOEH0WJProNpzttfjIRsXzuq3lxpDKLf8Fa4gOiqdTJu
IHpOx+ZgEH1laU8IiGZZppsJoqNqQ7PA/AdloieKXjt++2iuBKKfr5d7cBZI
y010BNOHWqdz+Ze8dpz0x0sQRCfcn6jEtfO1YxJbtAaINn/7+6cgkA74VPkH
RDOn5DEIAekfpVr8IDr1zToREH2/0lsURC/74SAJoieZlILp4KYbCiD6wIvH
YDrO5Y5pGpBuyzhqBqL/eRlz1gJpnSPTwPQv9/5Ytl2vHS/4zgHTerozHd68
ee3YlTsjAkSf4e9ZAKLfBOxZAaIBlSivoA==
  "],ExpressionUUID->"ed47bc5c-eb26-4178-96ea-367ab7d263a9"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   TagBox[
    {GrayLevel[0], Thickness[Large], Opacity[1.], FaceForm[Opacity[0.3]], 
     LineBox[CompressedData["
1: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
XG2aFiAOY5sNuES+/+/xQSM7vWwOn47/Aw362c8=
      "]]},
    Annotation[#, "Charting`Private`Tag$16573#1"]& ]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7480947305005875`*^9, 
  3.7480953055538054`*^9},ExpressionUUID->"09fc1b03-f627-4285-81e1-\
c1886358384c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Show the velocity graph and check acceleration at the top of the loop\
\[LineSeparator]\
\>", "Subsection",
 CellChangeTimes->{{3.6558480135439243`*^9, 3.655848022957614*^9}, {
   3.655848077532926*^9, 3.655848124131102*^9}, {3.6558481649756727`*^9, 
   3.6558484035990777`*^9}, {3.6558977846133738`*^9, 3.65589780876737*^9}, {
   3.6558978843953085`*^9, 3.655897891897648*^9}, {3.6560055070071683`*^9, 
   3.6560055302407064`*^9}, {3.720892836441994*^9, 3.720892840518444*^9}, {
   3.7209091500020576`*^9, 3.720909153594494*^9}, {3.7210813418408747`*^9, 
   3.7210813608391743`*^9}, 
   3.721081410669535*^9},ExpressionUUID->"1e0c29e6-51db-4a95-85a9-\
f2314f5bcac9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"guess", " ", "the", " ", "radius", " ", "is", " ", 
    RowBox[{"loopWidth", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"radius", "=", 
     RowBox[{"loopWidth", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Speed required at top of loop = \>\"", ",", 
     RowBox[{"Round", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{"g", " ", "radius"}]], ",", ".1"}], "]"}], ",", 
     "\"\< m/s\>\""}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"exx", "[", "t", "]"}], ",", 
         RowBox[{"wye", "[", 
          RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempLength"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{
         RowBox[{"wye", "[", "x", "]"}], ",", "hi"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "tempLength"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<V at top of loop = \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{
              RowBox[{"wye", "[", 
               RowBox[{"minX", "+", 
                RowBox[{"loopWidth", "/", "2"}]}], "]"}], ",", "hi"}], "]"}], 
            ",", ".1"}], "]"}]}], "<>", "\"\< m/s\>\""}], ",", "14"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "acceleration", " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<acceleration = \>\"", ",", 
     RowBox[{"ac", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{
          RowBox[{"wye", "[", 
           RowBox[{"minX", "+", 
            RowBox[{"loopWidth", "/", "2"}]}], "]"}], ",", "hi"}], "]"}], "^",
         "2"}], "/", "radius"}]}], ",", 
     "\"\< m/\!\(\*SuperscriptBox[\(s\), \(2\)]\) or \>\"", ",", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"ac", "/", "g"}], ",", ".1"}], "]"}], ",", "\"\< gees\>\""}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ac", "/", "g"}], "<", "4.5"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Loop is passable\>\"", ",", "Green", ",", "14"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"4.5", "\[LessEqual]", 
      RowBox[{"ac", "/", " ", "g"}], "<", "5.5"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Warning: acceleration is too high, riders are unconscious\>\"", 
       ",", "Blue", ",", "14"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ac", "/", "g"}], "\[GreaterEqual]", "5.5"}], " ", ",", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Fail: You just killed the riders! Change r and b or slow it \
down!\>\"", ",", "Red", ",", "14"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6566245204307947`*^9, 3.6566245425442133`*^9}, {
   3.656624638222675*^9, 3.6566246411049232`*^9}, {3.6566247148375454`*^9, 
   3.656624740527601*^9}, {3.656624837300062*^9, 3.6566248995112095`*^9}, {
   3.7210591232040453`*^9, 3.721059123388175*^9}, {3.721081407685227*^9, 
   3.7210815541284733`*^9}, {3.7210817863325243`*^9, 3.721082034154584*^9}, {
   3.721128025204674*^9, 3.7211280819915648`*^9}, 3.7211281711981726`*^9, {
   3.721128259296353*^9, 3.7211282931098385`*^9}, {3.721148136130395*^9, 
   3.7211481675609393`*^9}, {3.721409621653133*^9, 3.721409632018401*^9}, {
   3.721747096600171*^9, 3.721747118062443*^9}, {3.721752616977051*^9, 
   3.721752705515337*^9}, {3.7217527463141837`*^9, 3.7217528017631435`*^9}, {
   3.7217528337318673`*^9, 3.721752839225675*^9}, {3.748094705338952*^9, 
   3.7480947246928205`*^9}},ExpressionUUID->"4a4d6621-5a94-46d9-bc7d-\
cd05b19ddba3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Speed required at top of loop = \"\>", "\[InvisibleSpace]", 
   "7.4`", "\[InvisibleSpace]", "\<\" m/s\"\>"}],
  SequenceForm["Speed required at top of loop = ", 7.4, " m/s"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7210819982863936`*^9, 3.7210820349826136`*^9}, {
   3.7211280283810153`*^9, 3.721128082567586*^9}, 3.7211281721104326`*^9, {
   3.7211282688897643`*^9, 3.721128294110177*^9}, 3.7211480597383595`*^9, {
   3.721148144963073*^9, 3.7211481686546726`*^9}, 3.7214095939916506`*^9, {
   3.721409626966078*^9, 3.721409632940384*^9}, 3.72173786827396*^9, {
   3.721747072027543*^9, 3.721747099985814*^9}, {3.721752627354937*^9, 
   3.7217527075936956`*^9}, 3.7217527551658707`*^9, {3.7217527871645956`*^9, 
   3.7217528024976015`*^9}, 3.7217528583904285`*^9, 
   3.7480947361521425`*^9},ExpressionUUID->"54a52247-678f-4d0e-b60d-\
417f6b6012c6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
      0.3]], LineBox[CompressedData["
1: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
XG2aFiAOY5sNuES+/+/xQSM7vWwOn47/Aw362c8=
       "]]},
     Annotation[#, "Charting`Private`Tag$13399#1"]& ]}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
phdibCOImWn2n+8sF6Asbfi3M3Glf5zrwEoBNkU982MSv13wzSXAQIB7GVUf
/5K84PZdoTnXUAD/balv3xN3lJs5dzEFMHGfebWQeDjgosjTQgBHE606f+IY
s9dNWRwBKG92qlkSSytPW//ZRoCgumLbJcQLKzwcnBwF6Mqxpz0n/UJftMxO
4C3AC6f5axcQl/+0rU/wEyA+TlzQSfqLW7lXWLNdgNzOCHYh8YbAVr5FhAAr
6a61wv/yc1UWlxEvQG+y0dIIkl8eB//PYvk1AeTN0jkpJL+MDf5MUckTIPjf
zit2xAY7H32ULxDgEUVFRpE4e8+m0PESAV6udfx0nPR7SsLFi/U1AvhWl9Ye
JHnH/cpyiageAeasN59uQvJOutaITdAPAVSZWg2/yfl5c7369JYBAbJdvbIv
E7MLturajgng4z4eNIN4YYvDWoXpQlzTOrb3ATl/U31pG7sUhaDqnK0fI+fz
jE7M9Lb5QuwZfOBwjtgw0Ofap4VCci+UdII4+LfhcIOKEG7KodRYX7L/o++T
StWFSFHsOzBOzvuLGSplxwyEyLM/aVBO7oNzqlkq6+yFSDuuXJdB7o/Zh3Wr
VzsKYbZNVUqdeM/v8pAlIiFOHAzadM2VrK+qvWbKRYjHYfMiijYwscx/5c5y
T/I+dANKpTO5D4oKG61CyPcNbdUpIvfTTX5dkt0xIW6PNKsM2zCx5J4b3eyE
EJNmou+exMlL+9v1U4XYt8S68yWP9PefeeuU0oX401QsusxlQi9d1Nt0Xoh/
cyaMLDnkfLW3Wbnmk+dPShi6k/uyNGpMzOeVEKcgRh02YmIor6N/X4MQh5Rm
jdON/suHDS1n3wjhf7bo1W5Dcn451x69fifEzdR9V8VoTByevyGG1SpEdOYj
pb/6TDjeKp2aPyDEkLcF78lqJn62xUxWKtjCXWri60VVJpZypcbV1tuivcVm
+YNppD8azRoWOdniaHL56iYJJiw3xmTLu9jib9jOiF/iTPiGjNpPudki/r70
RzUxcr4yem982GKLhNrV7XvGGbDse7nxaLgtOo61cJUGGfBNPPVk8qQtnG1/
1he1M3DnpdaR929s4b3e3eRnBQMJVZNrVV3tEDhHTYESxsDxkG5f9492eIQP
VkFLGYhSWjJnmdO/mBve9FKnmo4crek1oS3/IuTbk0/rNtEx44+48mM3e3h/
7cliTBjh6tr86HOd9uj9Y3QkN8kIWh65/IkAB5zwOtQnu8wIzZzi2w69DqhZ
V7bqdJkhGi5GrmaFOMJer//tZ0dDjBTYMpcNOOLUXIehB39pmLoXfPfAtvVQ
dG/W9syhgbvW0iJqcD2MzQWJiU40iDU2iocOr8cN6o+NESIaCnduLvMbXQ/p
lKWvPdfTsOxJHM1lYj2SLXefYTrQMObwRIs+XYT5hbFPBoU05O7C7BFF4vGB
ywfYNMg8pTeFGIhgL25do25Iw1PXNVv9QkTI/qlp6aFMwzxPn/tnw0RIeXPU
eMNCGtx8zsu92iHC82tmSusX0DAUrHDbIEqE25Kf3ARKNKgfGh6biBOB1xnu
by1PQ8zthwkpqSJw9x1+4CtDA11KeOtusQiyL/vDHMeoOCAbL9F1X4SErR8+
+I9SUS9fbr+oTASDo/Yr4kg+9FExGI0uF8FSTyv67hAVaboLTdnPRRBej/1H
7TeZD11aXn/4KAKdp+mn3UcFNilryn0R4cGDe7sEvVQc2WIXwWoVoVvce2dY
DxXLgipULrWLcDRg5boKMj/aHsjeHPBDhDr159/926k4c6S1KLNfBObuwm2n
v1HRlbJoZsOAiMx9zZ+r2qiIyUi4SR0m6/31PlH9KxW1WZViW0dFuJhDqbNv
pWLBlUm7jL8iSEy8HN/fQoXHNdrlugkR9ih2q9z7QsXNW4HDU1MiLLn+aHXv
Zyr+D312rs4=
        "]]},
      Annotation[#, "Charting`Private`Tag$13425#1"]& ]}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotLabel->FormBox[
    StyleBox["\"V at top of loop = 21.4 m/s\"", 14, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{0., 100.}, {0., 45.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7210818991529045`*^9, 3.7210819313738947`*^9}, {
   3.7210819983784237`*^9, 3.7210820350785832`*^9}, {3.7211280284730124`*^9, 
   3.7211280826558485`*^9}, 3.7211281721944313`*^9, {3.721128268973734*^9, 
   3.721128294194211*^9}, 3.7211480598164606`*^9, {3.72114814505681*^9, 
   3.7211481687328076`*^9}, 3.7214095940697803`*^9, {3.7214096270598383`*^9, 
   3.721409633034171*^9}, 3.721737868352092*^9, {3.721747072152563*^9, 
   3.7217471000952015`*^9}, {3.721752627448723*^9, 3.721752707703085*^9}, 
   3.7217527550721397`*^9, {3.7217527871645956`*^9, 3.7217528026226177`*^9}, 
   3.7217528585154476`*^9, 
   3.7480947362482986`*^9},ExpressionUUID->"d09807b2-6fd5-4765-b4d5-\
3e1983a617ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"acceleration = \"\>", "\[InvisibleSpace]", 
   "81.12434369631883`", 
   "\[InvisibleSpace]", "\<\" m/\\!\\(\\*SuperscriptBox[\\(s\\), \\(2\\)]\\) \
or \"\>", "\[InvisibleSpace]", "8.3`", "\[InvisibleSpace]", "\<\" gees\"\>"}],
  SequenceForm[
  "acceleration = ", 81.12434369631883, 
   " m/\!\(\*SuperscriptBox[\(s\), \(2\)]\) or ", 8.3, " gees"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7210819982863936`*^9, 3.7210820349826136`*^9}, {
   3.7211280283810153`*^9, 3.721128082567586*^9}, 3.7211281721104326`*^9, {
   3.7211282688897643`*^9, 3.721128294110177*^9}, 3.7211480597383595`*^9, {
   3.721148144963073*^9, 3.7211481686546726`*^9}, 3.7214095939916506`*^9, {
   3.721409626966078*^9, 3.721409632940384*^9}, 3.72173786827396*^9, {
   3.721747072027543*^9, 3.721747099985814*^9}, {3.721752627354937*^9, 
   3.7217527075936956`*^9}, 3.7217527551658707`*^9, {3.7217527871645956`*^9, 
   3.7217528024976015`*^9}, 3.7217528583904285`*^9, 
   3.7480947362482986`*^9},ExpressionUUID->"6c1718b1-f26e-458f-a049-\
0748ba6dd78f"],

Cell[BoxData[
 StyleBox["\<\"Fail: You just killed the riders! Change r and b or slow it \
down!\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->14,
  FontColor->RGBColor[1, 0, 0]]], "Output",
 CellChangeTimes->{{3.7210818991529045`*^9, 3.7210819313738947`*^9}, {
   3.7210819983784237`*^9, 3.7210820350785832`*^9}, {3.7211280284730124`*^9, 
   3.7211280826558485`*^9}, 3.7211281721944313`*^9, {3.721128268973734*^9, 
   3.721128294194211*^9}, 3.7211480598164606`*^9, {3.72114814505681*^9, 
   3.7211481687328076`*^9}, 3.7214095940697803`*^9, {3.7214096270598383`*^9, 
   3.721409633034171*^9}, 3.721737868352092*^9, {3.721747072152563*^9, 
   3.7217471000952015`*^9}, {3.721752627448723*^9, 3.721752707703085*^9}, 
   3.7217527550721397`*^9, {3.7217527871645956`*^9, 3.7217528026226177`*^9}, 
   3.7217528585154476`*^9, 
   3.7480947362523046`*^9},ExpressionUUID->"998c3e28-f037-40e0-b6c1-\
3a46059a7132"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.721410102940199*^9, 
  3.721410136424912*^9}},ExpressionUUID->"a3b2f1e2-2fd3-405f-926e-\
3099f9a6e636"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "To", " ", "experiment", " ", "with", " ", "track", " ", "designs", " ", 
    RowBox[{"(", 
     RowBox[{"for", " ", "fun"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"see", " ", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{
     RowBox[{"www", ".", "lineflyer1", ".", "net"}], "/"}]}]}], "  ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.748095964276585*^9, 
  3.7480959675529857`*^9}},ExpressionUUID->"e78d95db-f31d-4964-8aeb-\
37e1ddbcd5da"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 637},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 715, 13, 219, "Section",ExpressionUUID->"60c90e1e-03af-4b7f-9361-62f0b4b59581"],
Cell[1298, 37, 1460, 34, 127, "Input",ExpressionUUID->"94e00497-b362-4019-8d19-25f17fb9304f",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2783, 75, 387, 8, 79, "Subsection",ExpressionUUID->"41c66002-d8b9-40d7-b7ad-0cae65c7d500"],
Cell[CellGroupData[{
Cell[3195, 87, 3076, 75, 178, "Input",ExpressionUUID->"adef4794-4c30-4fd5-8518-a6cfffa4f2fd",
 InitializationCell->True],
Cell[6274, 164, 18137, 309, 136, "Output",ExpressionUUID->"08d355f8-405d-45c1-8da7-e081fbc0113c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24448, 478, 2833, 67, 162, "Input",ExpressionUUID->"c3467d8d-a3c7-4255-84d0-f435e971fb81"],
Cell[27284, 547, 18727, 323, 319, "Output",ExpressionUUID->"9b900f0e-b363-4be5-ad58-817e37782c8c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46072, 877, 177, 3, 67, "Section",ExpressionUUID->"0bd18b4f-4a2f-4dd1-92cc-b343be877316"],
Cell[CellGroupData[{
Cell[46274, 884, 1200, 33, 67, "Input",ExpressionUUID->"402de252-bbca-48db-9884-3af21783c89a"],
Cell[47477, 919, 413, 8, 32, "Output",ExpressionUUID->"7a6164ca-64c4-4998-8c20-984881219679"]
}, Open  ]],
Cell[47905, 930, 457, 10, 28, "Input",ExpressionUUID->"8c280d64-adf7-4922-b718-44c7528efd02"],
Cell[CellGroupData[{
Cell[48387, 944, 335, 6, 53, "Subsection",ExpressionUUID->"93af2815-a5ee-496a-a50d-372b2c54618e"],
Cell[48725, 952, 961, 24, 77, "Input",ExpressionUUID->"f8c3ee4f-0b94-4164-ab02-759b44f5ca98"],
Cell[CellGroupData[{
Cell[49711, 980, 2107, 47, 86, "Input",ExpressionUUID->"a56a5db1-0aa0-4284-8237-4f5adba1cc50"],
Cell[51821, 1029, 1059, 16, 32, "Output",ExpressionUUID->"56899b4c-4dfc-42c4-bd75-0157cd982159"],
Cell[52883, 1047, 7901, 146, 234, "Output",ExpressionUUID->"82a1224f-dda1-4a18-b2e6-ea871f5e1283"]
}, Open  ]],
Cell[60799, 1196, 154, 3, 28, "Input",ExpressionUUID->"c0f71f3a-338f-4622-ba73-45babb61831e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60990, 1204, 267, 8, 105, "Subsection",ExpressionUUID->"8febcdd6-d471-497b-9dd2-20f6f1733241"],
Cell[CellGroupData[{
Cell[61282, 1216, 2301, 53, 86, "Input",ExpressionUUID->"9089c0fa-9003-4ea3-a847-d78f690a1a37"],
Cell[63586, 1271, 29748, 499, 208, "Output",ExpressionUUID->"0a660861-27fb-41e1-bb22-98540ca7da73"]
}, Open  ]],
Cell[93349, 1773, 2176, 44, 67, "Input",ExpressionUUID->"dc195e80-85b0-4066-81d5-622d106b68ed"],
Cell[CellGroupData[{
Cell[95550, 1821, 506, 15, 67, "Input",ExpressionUUID->"bb1c3b8f-86f8-43e2-9204-9a21b12118ab"],
Cell[96059, 1838, 383, 12, 59, "Output",ExpressionUUID->"b5899130-6136-4705-af34-7fa5598126a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96479, 1855, 714, 21, 48, "Input",ExpressionUUID->"85771021-db4c-4785-b8f8-3f5f9867e526"],
Cell[97196, 1878, 488, 15, 55, "Output",ExpressionUUID->"f8853376-3229-4acb-995f-798c3f9a62ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97721, 1898, 4654, 106, 371, "Input",ExpressionUUID->"2d45f960-68b7-4e2b-b9df-055a290968a9"],
Cell[CellGroupData[{
Cell[102400, 2008, 832, 17, 47, "Print",ExpressionUUID->"3c6ff38e-83f1-4f54-913f-3571d6be6ad0"],
Cell[103235, 2027, 736, 15, 47, "Print",ExpressionUUID->"70f0b3b1-d670-4618-af3c-0821300964cf"]
}, Open  ]],
Cell[103986, 2045, 21414, 362, 378, "Output",ExpressionUUID->"d6a5b491-abb8-4542-a472-e8ef41a6a9dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125449, 2413, 267, 8, 105, "Subsection",ExpressionUUID->"101fea32-4163-4934-8794-c8b53d58efa4"],
Cell[CellGroupData[{
Cell[125741, 2425, 2183, 50, 143, "Input",ExpressionUUID->"abbf0c6d-f83e-411f-ae96-1d234e766592"],
Cell[127927, 2477, 25806, 447, 239, "Output",ExpressionUUID->"09840609-be1f-4769-b001-bbe1ba9a760f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[153782, 2930, 652, 13, 131, "Subsection",ExpressionUUID->"36e109fc-d4bc-40d6-8f9d-39f816468356"],
Cell[CellGroupData[{
Cell[154459, 2947, 6346, 162, 452, "Input",ExpressionUUID->"ed47bc5c-eb26-4178-96ea-367ab7d263a9"],
Cell[160808, 3111, 12140, 212, 280, "Output",ExpressionUUID->"09fc1b03-f627-4285-81e1-c1886358384c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172997, 3329, 677, 12, 79, "Subsection",ExpressionUUID->"1e0c29e6-51db-4a95-85a9-f2314f5bcac9"],
Cell[CellGroupData[{
Cell[173699, 3345, 4425, 102, 390, "Input",ExpressionUUID->"4a4d6621-5a94-46d9-bc7d-cd05b19ddba3"],
Cell[178127, 3449, 912, 15, 22, "Print",ExpressionUUID->"54a52247-678f-4d0e-b60d-417f6b6012c6"],
Cell[179042, 3466, 22340, 380, 204, "Output",ExpressionUUID->"d09807b2-6fd5-4765-b4d5-3e1983a617ce"],
Cell[201385, 3848, 1086, 19, 24, "Print",ExpressionUUID->"6c1718b1-f26e-458f-a049-0748ba6dd78f"],
Cell[202474, 3869, 1040, 20, 34, "Output",ExpressionUUID->"998c3e28-f037-40e0-b6c1-3a46059a7132"]
}, Open  ]],
Cell[203529, 3892, 152, 3, 28, "Input",ExpressionUUID->"a3b2f1e2-2fd3-405f-926e-3099f9a6e636"],
Cell[203684, 3897, 507, 15, 28, "Input",ExpressionUUID->"e78d95db-f31d-4964-8aeb-37e1ddbcd5da"]
}, Open  ]]
}, Open  ]]
}
]
*)

